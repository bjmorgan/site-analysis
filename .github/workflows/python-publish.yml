name: Build and publish to PyPI

on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]  # macos-13=Intel, macos-14=Apple Silicon

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # Build for Python 3.10+ (matching your pyproject.toml)
          CIBW_BUILD: cp310-* cp311-* cp312-* cp313-*
          
          # Skip problematic builds
          CIBW_SKIP: "*-win32 *-manylinux_i686"  # Skip 32-bit
          
          # Linux: Install gfortran
          CIBW_BEFORE_ALL_LINUX: >
            yum install -y gcc-gfortran ||
            apt-get update && apt-get install -y gfortran
          
          # macOS: Install gfortran
          CIBW_BEFORE_ALL_MACOS: >
            brew install gcc
          
          # Windows: Use MSYS2 for gfortran
          CIBW_BEFORE_ALL_WINDOWS: >
            choco install msys2 &&
            C:/tools/msys64/usr/bin/pacman -S --noconfirm mingw-w64-x86_64-gcc-fortran
          
          # Windows: Set up PATH for gfortran
          CIBW_ENVIRONMENT_WINDOWS: >
            PATH="C:/tools/msys64/mingw64/bin:$PATH"
          
          # Test that the wheel imports correctly
          CIBW_TEST_COMMAND: >
            python -c "
            import crystal_torture;
            print(f'crystal-torture {crystal_torture.__version__} imported successfully');
            from crystal_torture import graph_from_structure;
            print('âœ… Core functionality available')
            "

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_source:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran

      - name: Build source distribution
        run: |
          python -m pip install --upgrade pip build
          python -m build --sdist

      - name: Upload source artifacts
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_source]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist/

      - name: Download source artifacts
        uses: actions/download-artifact@v4
        with:
          name: source
          path: dist/

      - name: List all artifacts
        run: ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
